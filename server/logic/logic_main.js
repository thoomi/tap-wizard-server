////////////////////////////////////////////////////////////////////////////////
/// Dependencies
////////////////////////////////////////////////////////////////////////////////
var DATA = DATA || {};
DATA.GameRoomManager = require('../data/data_gameroom_manager.js');

var NETWORK = NETWORK || {};
NETWORK.Server = require('../network/net_server.js');

////////////////////////////////////////////////////////////////////////////////
/// Module exports
/// Declares the name of the object which will be available through the 
/// require() function
////////////////////////////////////////////////////////////////////////////////
module.exports = exports = new LogicMain(); 


////////////////////////////////////////////////////////////////////////////////
/// \fn LogicMain()
///
/// \brief Entry point for the logic controller
////////////////////////////////////////////////////////////////////////////////
function LogicMain () {

    // -----------------------------------------------------------------------------
    // m_gameRoomManager => The manager object for the game rooms. It can create and
    // find game rooms.
    // -----------------------------------------------------------------------------
    this.m_gameRoomManager = null;

    ////////////////////////////////////////////////////////////////////////////////
    /// \fn onStartup()
    ///
    /// \brief Sets up and initializes the logic
    ////////////////////////////////////////////////////////////////////////////////
    this.onStartup = function() {
        this.m_gameRoomManager = new DATA.GameRoomManager();

        NETWORK.Server.onStartup();
    };


    ////////////////////////////////////////////////////////////////////////////////
    /// \fn onRun()
    ///
    /// \brief "main" function of the logic
    ////////////////////////////////////////////////////////////////////////////////
    this.onRun = function() {
        NETWORK.Server.onRun();
    };


    ////////////////////////////////////////////////////////////////////////////////
    /// \fn onShutdown()
    ///
    /// \brief Gracefully shutdown of the logic
    ////////////////////////////////////////////////////////////////////////////////
    this.onShutdown = function() {
        NETWORK.Server.onShutdown();
    };
}